1、UCOSIII中以下优先级用户程序不能使用，ALIENTEK将这些优先级分配给了UCOSIII的5个系统内部任务：
	优先级0：中断服务服务管理任务 OS_IntQTask()
	优先级1：时钟节拍任务 OS_TickTask()
	优先级2：定时任务 OS_TmrTask()
	优先级OS_CFG_PRIO_MAX-2：统计任务 OS_StatTask()
	优先级OS_CFG_PRIO_MAX-1：空闲任务 OS_IdleTask()

2、ALIENTEK使用UCOSII来为STemWin提供系统时钟，建立一个任务来处理触摸屏。
---------------------------------------------------------------------------------------------------
1、..\OBJ\clock_design.axf: Error: L6218E: Undefined symbol FT5206_Scan (referred from touch.o).

2、https://www.codenong.com/cs109668191/

3、字符数组与整数转化问题
第一步先将字符数组转化为字符串：
第二步：字符串转化为整数...
	头文件："stdlib.h
	采用函数：
		atof() 将字符串转换为双精度浮点型值
		atoi() 将字符串转换为整型值
		atol() 将字符串转换为长整型值
		strtod() 将字符串转换为双精度浮点型值，并报告不能被转换的所有剩余数字
		strtol() 将字符串转换为长整值，并报告不能被转换的所有剩余数字
		strtoul() 将字符串转换为无符号长整型值，并报告不能被转换的所有剩余数字

4、先提取时间再提取日期，否则会导致读取的时间不准确
5、定义Sprintf中用来存放rtc数据的字符串时，必须用数组形式定义（长度20左右可行，尽量大一些），而不能用指针形式定义，
   否则时间不刷新，原因是如果使用指针形式定义字符串则初始化的内存空间可能不够，写入数据时易出错。
6、设置时间可以，设置日期失败问题。
   解决方法：
	1、使用WAKEUP中断读取时间，轮询读取日期。
	2、不使用WAKEUP中断，轮询读取时间和日期。

问题一：RTC时间不准
	有不少工程师都遇到过RTC计数一天，相差几秒甚至几十秒的情况。导致时间不准最根本的原因是时钟源，还有时钟分频值。
	低速内部晶振（LSI）的误差相对较大，特别是温差变化较大的环境。
	还有关于时钟分频值，上面已经提到了分频128，实际配置参数应该为127.
	解决办法：使用更高精度低速外部晶振、校正、软件配置正确分频值。
问题二：RTC时钟配置失败
	RTC的供电来源备份区域电源，操作RTC之前，需要使能后备区域操作。如果没有这一步操作，你会发现操作低速时钟、RTC可能会失败。
	当然，出现这种情况，一般是使用标准外设库配置导致的失败。
	解决办法：使用Cube工具，或参考官方例程初始化代码。

问题三：RTC日历不更新的问题
	日历数据读取操作日历不更新的情形。其实RTC的日历寄存器由两个组成，为了保证读取时间点的一致性，
	先读时分秒然后读日期做为一个完整的日历读取操作。在读取TIME【时分秒】后，硬件会将当前日历数据锁住，
	直到DATE【年月日】寄存器被读取后释放。否则会遇到读取日历时发生数据不更新的情况。
	解决办法：对于RTC日历的读取要注意读取动作的完整性，读了TIME还要读取DATE才算一个完整操作，以保持读取时间的一致性。
